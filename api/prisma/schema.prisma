generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid()) @db.Uuid
  userName String
  email    String    @unique
  password String
  role     String    @default("user")
  active   Boolean   @default(true)
  date     DateTime  @default(now()) @db.Timestamptz(6)
  sales    Json[]
  cart     Cart?
  comments Comment[]
}

model Product {
  id          String    @id @default(uuid()) @db.Uuid
  name        String
  price       Int
  discount    Int?      @default(0)
  totalPrice  Int
  type        String
  description String
  specs       Json[]
  image       String
  imageOffer  String?
  stock       Int       @default(0)
  active      Boolean   @default(true)
  date        DateTime  @default(now()) @db.Timestamptz(6)
  categoryId  String    @db.Uuid
  category    Category  @relation(fields: [categoryId], references: [id])
  comments    Comment[]
}

model Category {
  id            String        @id @default(uuid()) @db.Uuid
  name          String
  products      Product[]
  subCategories SubCategory[]
}

model SubCategory {
  id         String   @id @default(uuid()) @db.Uuid
  name       String
  categoryId String   @db.Uuid
  category   Category @relation(fields: [categoryId], references: [id])
}

model Cart {
  id       String   @id @default(uuid()) @db.Uuid
  date     DateTime @default(now()) @db.Timestamptz(6)
  userId   String   @unique @db.Uuid
  products Json[]
  total    Int      @default(0)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Sale {
  id         String   @id @default(uuid()) @db.Uuid
  orderNum   String
  status     String   @default("Pendiente")
  date       DateTime @default(now()) @db.Timestamptz(6)
  dateFormat String?
  user       Json
  cart       Json
}

model Comment {
  id        String   @id @default(uuid()) @db.Uuid
  text      String
  date      DateTime @default(now()) @db.Timestamptz(6)
  userId    String   @db.Uuid
  productId String   @db.Uuid
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
